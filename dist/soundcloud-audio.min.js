!function(t){if("object"==typeof exports&&"undefined"!=typeof module)module.exports=t();else if("function"==typeof define&&define.amd)define([],t);else{var e;"undefined"!=typeof window?e=window:"undefined"!=typeof global?e=global:"undefined"!=typeof self&&(e=self),e.SoundCloudAudio=t()}}(function(){return function t(e,i,n){function o(s,a){if(!i[s]){if(!e[s]){var l="function"==typeof require&&require;if(!a&&l)return l(s,!0);if(r)return r(s,!0);var u=new Error("Cannot find module '"+s+"'");throw u.code="MODULE_NOT_FOUND",u}var p=i[s]={exports:{}};e[s][0].call(p.exports,function(t){var i=e[s][1][t];return o(i?i:t)},p,p.exports,t,e,i,n)}return i[s].exports}for(var r="function"==typeof require&&require,s=0;s<n.length;s++)o(n[s]);return o}({1:[function(t,e,i){"use strict";function n(t){s||(s=document.createElement("a")),s.href=t||"";for(var e={},i=0,n=a.length;i<n;i++){var o=a[i];e[o]=s[o]}return e}function o(t,e,i){var o=n(t),r=/\?(?:.*)$/,s=r.test(o.search)?"&":"?",a=o.protocol+"//"+o.host+o.port+o.pathname+o.search+s+e+"="+i+o.hash;return a}function r(t){if(!(this instanceof r))return new r(t);if(!t)throw new Error("SoundCloud API clientId is required, get it - https://developers.soundcloud.com/");this._events={},this._clientId=t,this._baseUrl="https://api.soundcloud.com",this.playing=!1,this.duration=0,this.audio=document.createElement("audio")}var s,a="protocol hostname host pathname port search hash href".split(" ");r.prototype.resolve=function(t,e){if(!t)throw new Error("SoundCloud track or playlist url is required");var i=this._baseUrl+"/resolve.json?url="+encodeURIComponent(t)+"&client_id="+this._clientId;this._json(i,function(i){if(this.cleanData(),Array.isArray(i)){var o=i;i={tracks:o},this._playlist=i}else if(i.tracks)this._playlist=i;else{this._track=i;var r=n(t);this._track.stream_url+=r.hash}this.duration=i.duration&&!isNaN(i.duration)?i.duration/1e3:0,e(i)}.bind(this))},r.prototype._jsonp=function(t,e){var i=document.getElementsByTagName("script")[0]||document.head,n=document.createElement("script"),r="jsonp_callback_"+(new Date).valueOf()+Math.floor(1e3*Math.random());window[r]=function(t){n.parentNode&&n.parentNode.removeChild(n),window[r]=function(){},e(t)},n.src=o(t,"callback",r),i.parentNode.insertBefore(n,i)},r.prototype._json=function(t,e){var i=new XMLHttpRequest;i.open("GET",t),i.onreadystatechange=function(){if(4===i.readyState&&200===i.status){var t={};try{t=JSON.parse(i.responseText)}catch(t){}e(t)}},i.send(null)},r.prototype.on=function(t,e){this._events[t]=e,this.audio.addEventListener(t,e,!1)},r.prototype.off=function(t,e){this._events[t]=null,this.audio.removeEventListener(t,e)},r.prototype.unbindAll=function(){for(var t in this._events){var e=this._events[t];e&&this.off(t,e)}},r.prototype.preload=function(t){this._track={stream_url:t},this.audio.src=o(t,"client_id",this._clientId)},r.prototype.play=function(t){t=t||{};var e;if(t.streamUrl)e=t.streamUrl;else if(this._playlist){var i=this._playlist.tracks.length;if(i){if(this._playlistIndex=t.playlistIndex||0,this._playlistIndex>=i||this._playlistIndex<0)return void(this._playlistIndex=0);e=this._playlist.tracks[this._playlistIndex].stream_url}}else this._track&&(e=this._track.stream_url);if(!e)throw new Error("There is no tracks to play, use `streamUrl` option or `load` method");e=o(e,"client_id",this._clientId),e!==this.audio.src&&(this.audio.src=e),this.playing=e,this.audio.play()},r.prototype.pause=function(){this.audio.pause(),this.playing=!1},r.prototype.stop=function(){this.audio.pause(),this.audio.currentTime=0,this.playing=!1},r.prototype.next=function(){var t=this._playlist.tracks.length;this._playlistIndex>=t-1||this._playlist&&t&&this.play({playlistIndex:++this._playlistIndex})},r.prototype.previous=function(){this._playlistIndex<=0||this._playlist&&this._playlist.tracks.length&&this.play({playlistIndex:--this._playlistIndex})},r.prototype.seek=function(t){if(!this.audio.readyState)return!1;var e=t.offsetX/t.target.offsetWidth||(t.layerX-t.target.offsetLeft)/t.target.offsetWidth;this.audio.currentTime=e*(this.audio.duration||0)},r.prototype.cleanData=function(){this._track=void 0,this._playlist=void 0},e.exports=r},{}]},{},[1])(1)});
